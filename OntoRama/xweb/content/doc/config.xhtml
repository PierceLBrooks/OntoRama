<?xml version="1.0" encoding="UTF-8"?>

<html>
	<head>
		<title>OntoRama Documentation:Config</title>
	</head>
	<body>
		<h1 align="center">
			Configuration
		</h1>
		<insertPrintLink href="config_print.html"/>
		<p>
			For definitions of terms 'relation link' and concept type
			'properties', please, see  <a href="intro.html#definitions">Introduction section</a>
		</p>
		<p>
			Relation links in the OntoRama a fully
			configurable via 'config' XML file. This mean that if we need to display
			an ontology with a different set of relation links, we only need to alter config file
			without having to modify and recompile the application.
		</p>
        <p>
            We 'classify' relation links into two categories for displying purposes: first one
            is displayed in the graph visualisations and second one is displayed in the description
            section of the application window. Relations most suitable for the second category are
            description, synonyms, creator, etc.
        </p>
		<p>
			OntoRama reads a configuration file on the startup and processes it. File
			is XML file and consist of three sections: 'ontology', 'displayInfo' sections and
			'rdfMapping' section.
		</p>
		<p>
            The 'ontology' section describes relation links available in the current ontology.
            This section includes a set of 'relation' elements, each of them defining an ontology relation link.
		</p>
		<p>
			Each relation is defined as an element 'relation' and gets an id
			assigned to it. This id is going to be a reference to the corresponding
			relation. We also define a name for each
			relation link. Some relations could have two names, which means that
			they are reversable.
		</p>
		<p>
			Examples of relations: subtype/supertype relation. Consider
			term 'wn#Cat', this term is connected to term 'wn#TrueCat' via the relation
			link 'subtype' (wn#Cat is subtype of 'wn#TrueCat'). Reverse relation
			link to 'subtype' is 'supertype' and following is true: 'wn#TrueCat' is
			connected to 'wn#Cat' via relation link 'supertype'.
		</p>
		<p>
			Here is a sniplet from the configuration file describing
			subtype/supertype relation:
		</p>
		<xml>
		<relation id="1">
			<relationType name="subtype"/>
			<relationType name="supertype"/>
		</relation>
        </xml>
		<p>
			Each  relation is uniquely identified by relation id number and relation
			name. It should be noted that OntoRama will display only one relation
			link for each relation (due to the fact that they are reversable). At
			present, the first declared link in the 'relation' element will be
			displayed.
		</p>
        <p>The 'displayInfo' section describes how OntoRama should display each relation, here
        is a section of configuration file corresponding to subtype/supertype relation link.
        </p>
        <xml>
        <relation id="1">
            <displayInGraphView>
                <createIcon color="#33CCFF">
                    <relationType name="subtype" mappingSymbol="&lt;"/>
                    <relationType name="supertype" mappingSymbol="&gt;"/>
                </createIcon>
            </displayInGraphView>
            <displayInDescriptionWindow>
                <relationType name="supertype" displayLabel="Parents"/>
            </displayInDescriptionWindow>
        </relation>
        </xml>
        <p>
            DisplayInfo element has an attribute id that specifies relation id. Further on this element
            can have two children: displayInGraphView and/or displayInDescriptionView. It is compulsory for
            relation to have at least one of these elements specified, otherwise OntoRama won't display this
            relation link.
            <ul>
                <li>
                    displayInGraphView - specifies whether OntoRama should display this relation link in the
                    graph visualisations. This element should have either of the following two sublements:
                    <ul>
                        <li>
                            createIcon - if this element is present, then application will create an Icon
                            corresponding to this relation link with given color and mappingSymbol.
                        </li>
                        <li>
                            loadIcon - if this element is present, icon corresponding to this relation link will
                            be loaded from specified location. This element should have two sublements:
                            relationType, each having attribute 'name' tying it to the desired relation link and
                            attribute 'path' specifying location of icon to load. (Note: this feature is not
                            fully implemented yet ;)
                        </li>
                    </ul>
                </li>
                <li>
                    displayInDescriptionWindow - specifies whether OntoRama should display this relation
                    link in the description section of the application. This could be usefull for relation
                    links such as description, synonyms, etc. We also used this to tell OntoRama to display
                    node's parents in the description view as seen in the example above. Here is a sniplet of
                    configuration file corresponding to synonyms relation link:
                </li>
            </ul>
            <xml>
       <relation id="15">
            <displayInDescriptionWindow>
                <relationType name="synonym" displayLabel="Synonym"/>
            </displayInDescriptionWindow>
        </relation>
            </xml>
        </p>
		<p>
			While Ontology section of configuration file sets the scene, RdfMapping
			section specifies how application should be able to find items defined
			in the ontology section in the source RDF file. Here is an example of
			'rdfMapping' element:
		</p>
<xml>
<rdfMapping>
  <relationLinks>
	<map id="1" type="supertype" tag="subClassOf"/>
	<map id="3" type="part" tag="part"/>
	<map id="6" type="inclusive" tag="jointWith"/>
  </relationLinks>
  <conceptProperties>
	<map id="Description" tag="comment"/>
	<map id="Creator" tag="Creator"/>
	<map id="Synonym" tag="label"/>
  </conceptProperties>
</rdfMapping>
</xml>
		<p>
			It also consists of two subsections, one: 'relationLinks' maps relation
			links defined in the 'ontology' section to RDF tags. Another subsection
			'conceptProperties' maps concept type properties to RDF tags.
		</p>
		<p>
			For instance, element <code>&lt;map id="1" type="supertype" tag="subClassOf"/&gt;</code>
			is mapping relation type 'supertype' to RDF tag 'subClassOf'. This is an
			interesting example because as stated above, OntoRama would display
			relation link 'subtype', this means that the application has to reverse
			'supertype' links to be able to display them. Here is example RDF:
		</p>
<xml>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:rdfs="http://www.w3.org/TR/1999/PR-rdf-schema-19990303#"
         xmlns:dc="http://purl.org/metadata/dublin_core#"
         xmlns:daml="http://www.daml.org/2000/10/daml-ont#"
         xmlns:pm="http://www.webkb.org/kb/theKB_terms.rdf/pm#">
<rdfs:Class
	rdf:about=".../wn#Cat">
  <rdfs:label xml:lang="en">
  	cat
  </rdfs:label>
  <rdfs:label xml:lang="en">
    domestic_cat
  </rdfs:label>
  <rdfs:label xml:lang="en">
    house_cat
  </rdfs:label>
  <rdfs:label xml:lang="en">
    Felis_domesticus
  </rdfs:label>
  <rdfs:label xml:lang="en">
    Felis_catus
  </rdfs:label>
  <dc:Creator>
    http://www.cogsci.princeton.edu/~wn/
  </dc:Creator>
  <rdfs:comment>
  	any domesticated member of the genus Felis
  </rdfs:comment>
  <rdfs:subClassOf rdf:resource= ".../wn#TrueCat"/>
</rdfs:Class>
</rdf:RDF>
</xml>
		<p>
			The last statement will be translated by OntoRama as following:
			'wn#TrueCat' is 'supertype'of 'wn#Cat'. However, OntoRama needs to
			reverse this statement as only 'subtype' relation links are displayed
			resulting in: 'wn#Cat' is 'subtype' of 'wn#TrueCat'.
		</p>
	</body>
</html>

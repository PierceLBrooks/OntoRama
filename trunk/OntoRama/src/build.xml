<project name="OntoRama Project" default="compile" basedir="..">


  <property name="app.name"       value="OntoRama"/>
  <property name="src.home"   value="${basedir}/src"/>
  <property name="lib.home"   value="${basedir}/lib"/>
  <property name="deploy.home"   value="${basedir}/deploy"/>
  <property name="javadoc.home"   value="${basedir}/doc/api"/>
  <property name="examples.dir.name"   value="examples"/>
  <property name="examples.home"   value="${basedir}/${examples.dir.name}"/>
  <property name="img.dir.name"   value="img"/>
  <property name="img.home"   value="${src.home}/${img.dir.name}"/>
  <property name="jar.file"	value="${basedir}/OntoRama.jar"/>
  <property name="jenaJar.file"	value="${basedir}/jenaOntorama.jar"/>
  <property name="deploy.webstart"	value="${basedir}/deployWebstart"/>
  <property name="src.webstart"	value="${src.home}/webstart"/>

  
  <!-- Set Classpath -->
  <path id="project.class.path">
  	<pathelement location="${deploy.home}/"/>
    <pathelement location="${lib.home}/"/>
	<pathelement path="${lib.home}/jdom.jar/"/>
	<pathelement path="${lib.home}/jenaOntorama.jar/"/>
	<pathelement path="${lib.home}/junit.jar/"/>
	<pathelement path="${lib.home}/xerces.jar/"/>
    <pathelement path="${lib.home}/event.jar/"/>
    <pathelement path="${lib.home}/canvas.jar/"/>
      <!--
	<pathelement path="${lib.home}/batik-awt-util.jar/"/>
	<pathelement path="${lib.home}/batik-dom.jar/"/>
	<pathelement path="${lib.home}/batik-svggen.jar/"/>
	<pathelement path="${lib.home}/batik-util.jar/"/>
	<pathelement path="${lib.home}/batik-xml.jar/"/>
	<pathelement path="${lib.home}/mockobjects.jar/"/>
    -->
	<!--
	<pathelement path="${lib.home}/concurrent-1.3.0.jar/"/>
	<pathelement path="${lib.home}/db3-3-11.jar/"/>
	-->
  </path>

  <!-- Targets and Rules -->
  <target name="all" depends="clean,prepare,compile"/>
  <target name="mkDir">
    <mkdir  dir="${deploy.home}"/>
      <mkdir  dir="${deploy.home}/cgkb"/>
    <mkdir  dir="${javadoc.home}"/>
  </target>
  
  <!--<target name="prepare" depends="clean">-->
 <target name="prepare" depends="mkDir,copyExamples,copyImages">
    <copy   todir="${deploy.home}">
      <fileset dir="${src.home}" includes="**/*.properties"/>
      <fileset dir="${src.home}" includes="**/config.xml"/>
      <fileset dir="${src.home}" includes="**/examplesConfig.xml"/>
      <fileset dir="${src.home}" includes="MANIFEST.MF"/>
	</copy>
     <copy   todir="${deploy.home}/cgkb">
         <fileset dir="${src.home}/cgkb" includes="*"/>
     </copy>
 </target>

  <target name="clean">
    <delete dir="${deploy.home}"/>
	<!--<delete dir="${javadoc.home}"/>-->
	<delete file="${jar.file}"/>
	</target>

  <target name="copyExamples">
    <copy   todir="${deploy.home}/${examples.dir.name}">
      <fileset dir="${examples.home}"/>
	</copy>  
  </target>
  
  <target name="copyImages">
    <copy   todir="${deploy.home}/${img.dir.name}">
      <fileset dir="${img.home}"/>
	</copy>  
  </target>  
  
  <target name="compile" depends="prepare">
    <javac destdir="${deploy.home}"  debug="on" optimize="off"	deprecation="off">
		<src path="${src.home}"/>
		<classpath refid="project.class.path"/>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <jar jarfile="${jar.file}" basedir="${deploy.home}" manifest="${src.home}/MANIFEST.MF"/>
  </target>


  <target name="javadoc" depends="prepare">
    <javadoc sourcepath="${src.home}" 
			packagenames="ontorama.*,ontorama.model.*,ontorama.hyper.*,ontorama.view.*,ontorama.tree.*"
            destdir="${javadoc.home}"
			classpathref="project.class.path"/>
  </target>

  <!--<target name="run" depends="compile">-->
  <target name="run">
  	<java fork="yes" classname="ontorama.view.OntoRamaApp" classpathref="project.class.path"/>
  </target>


    <target name="runCgkb">
        <java fork="yes" classname="ontorama.view.OntoRamaApp" classpathref="project.class.path">
            <arg line="cgkb/config.xml ontorama.properties cgkb/examplesConfig.xml"/>
        </java>
    </target>


  <target name="runJar" depends="jar">
  	<java fork="yes"  jar="${jar.file}" classpathref="project.class.path"/>
  </target>
  
  <target name="webstartDeploy" depends="jar">
  	<delete dir="${deploy.webstart}"/>
  	<mkdir dir="${deploy.webstart}"/>
	<mkdir dir="${deploy.webstart}/lib"/>	
	<copy todir="${deploy.webstart}">
		<fileset dir="${src.webstart}" includes="**/*"/>
	</copy>
  	<copy todir="${deploy.webstart}/lib"> 
		<fileset dir="${lib.home}" includes="**/*.jar"/>
	</copy>
	<copy todir="${deploy.webstart}">
		<fileset dir="${basedir}" includes="OntoRama.jar"/>
	</copy>
  </target>
  
  <target name="zip" depends="webstartDeploy">
	<zip zipfile="${basedir}/ontorama.zip"
       basedir="${deploy.webstart}"
	/>
	<copy todir="${deploy.webstart}">
		<fileset dir="${basedir}" includes="ontorama.zip"/>
	</copy>
  </target>
  
  <target name="webstart" depends="webstartDeploy,zip">
  </target>

  <target name="runtests" depends="compile">
  	<java fork="yes" classname="junit.textui.TestRunner" 
    	taskname="junit" failonerror="true">
        <arg value="ontorama.test.TestPackage"/>
		<classpath refid="project.class.path"/>
    </java>
  </target>

    <target name="xweb">
        <property environment="env"/>
        <java classname="net.sourceforge.xweb.backend.WebsiteProcessor">
          <arg value="${basedir}/xweb/ontoramaWeb.xweb"/>
          <classpath>
            <pathelement location="${env.XWEBHOME}/xweb.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/jdom.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/xerces.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/saxon.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/JimiProClasses.zip"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-transcoder.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-dom.jar"/>
              <pathelement location="${env.XWEBHOMEe}/libs/batik-bridge.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-svg-dom.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-css.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-gvt.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-ext.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-util.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-xml.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/crimson-parser.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-awt-util.jar"/>
              <pathelement location="${env.XWEBHOME}/libs//batik-script.jar"/>
              <pathelement location="${env.XWEBHOME}/libs/batik-parser.jar"/>
              <pathelement location="${env.JAVA_HOME}/jre/lib/rt.jar"/>
              <pathelement location="${env.JAVA_HOME}/jre/lib/ext/dnsns.jar"/>
              <pathelement location="${env.JAVA_HOME}/jre/lib/ext/ldapsec.jar"/>
              <pathelement location="${env.JAVA_HOME}/jre/lib/localedata.jar"/>
              <pathelement location="${env.JAVA_HOME}/jre/lib/sunjce_provider.jar"/>
          </classpath>
        </java>

        <!--
        <java fork="yes" classname="ontorama.view.OntoRamaApp" classpathref="project.class.path"/>

        <exec dir="${xweb.home}" executable="bin/wp.bat">
          <arg line="ontoramaWeb.xweb"/>
        </exec>
        -->

    </target>


  <!-- targets for rebuilding jena library -->
  <!--
  <target name="jenaCompile" depends="prepare">
  	<mkdir  dir="${deploy.home}/com"/>
	<mkdir  dir="${deploy.home}/jena"/>
    <javac destdir="${deploy.home}/com"  debug="on" optimize="off"	deprecation="off">
		<src path="${src.home}/com"/>
		<classpath refid="project.class.path"/>
    </javac>
	<javac destdir="${deploy.home}/jena"  debug="on" optimize="off"	deprecation="off">
		<src path="${src.home}/jena"/>
		<classpath refid="project.class.path"/>
    </javac>
  </target>

  
  <target name="jenaJar">
  	
  	<jar jarfile="${jenaJar.file}" basedir="${deploy.home}" 
		 includes="com/**,jena/**" excludes="ontorama*,package*,config.xml*,MANIFEST*,ontorama.properties"/>
	
  </target>
  -->
	
</project>

